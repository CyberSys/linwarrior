# Project: Linwarrior 3D
# Makefile with auto-dependency generation

# Add Include directories here.
INCLUDES = -I . 

# Automatic searching for source files.
# Objects to compile are all sources (cpp) and put the .o below build-dir.
OBJECTS=$(addprefix build/, $(subst .cpp,.o, $(wildcard source/*.cpp source/*/*.cpp) ) )

# Different Parameters and Programms for different OSes.
ifneq (,$(findstring Win,$(OS)))
	LIBRARIES= -lmingw32 -lSDLmain -lSDL -lOpenGL32 -lGLU32 -lopenal32 -lalut
	TARGET=dist\linwarrior.exe
	MKDIR=mkdir
	CP=copy
	RM=cmd /C del /Q
	RMREC=cmd /C del /Q /S
	CPP=c++
	LIMITER=$(dir \file)
	CFLAGS+= -static-libgcc
else
	LIBRARIES= -lGLEW -lGLU -lSDL -lopenal -lalut
	TARGET=dist/linwarrior
	MKDIR=mkdir
	RM=rm -f
	RMREC=rm -f -r
	CP=cp
	CPP=c++
	LIMITER=/
endif

# Creation of dependency information when compiling.
CFLAGS += -Wp,-M,-MP,-MT,$@,-MF,dep/$(subst /,-,$@).d

# Print warnings when compiling.
CFLAGS += -Wall

# Use the given includepathes.
CFLAGS += $(INCLUDES)

# Optimizations.
CFLAGS += -O1 -funroll-loops

# Default makefile Target.
all: $(TARGET)

# For executable we need all sources compiled to objects.
$(TARGET): $(OBJECTS)
	$(CPP) -o $(TARGET) $(OBJECTS) $(LIBRARIES)

# Compile all Source files, creates output directories as necessary.
build/%.o: %.cpp
	$(shell $(MKDIR) build 2>/dev/null)
	$(shell $(MKDIR) $(dir $@) 2>/dev/null)
	$(CPP) $(CFLAGS) -c $< -o $@

# IDE may call makefile with target "build" instead of "all".
build: all

# May call clean before build to delete previous relics.
.PHONY: clean
clean:
	$(RM) $(TARGET)
	$(RM) dep$(LIMITER)*.o.d
	$(RM) build$(LIMITER)source$(LIMITER)*.o

clean_win:
	$(RM) '$(TARGET)'
	$(RM) 'dep$(LIMITER)*.o.d'
	$(RM) 'build$(LIMITER)source$(LIMITER)*.o'

# Target to compile doxygen helpfiles from code and comments see conf file.
doxygen:
	doxygen doxygen.conf

# Include autogenerated dependency files (silently makedir if not exiting).
-include $(shell $(MKDIR) dep 2>/dev/null) $(wildcard dep/*)

